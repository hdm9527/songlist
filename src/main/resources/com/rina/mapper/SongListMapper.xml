<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rina.mapper.SongListMapper">
	<resultMap id="BaseResultMap" type="com.rina.domain.SongList">
		<id column="song_id" property="id" jdbcType="BIGINT"/>
		<result column="song_name" property="name" jdbcType="VARCHAR"/>
		<result column="song_artist" property="artist" jdbcType="VARCHAR"/>
		<result column="song_language" property="language" jdbcType="VARCHAR"/>
		<result column="create_by" property="createBy" jdbcType="VARCHAR"/>
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
		<result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
	</resultMap>
	<delete id="deleteOneSong" parameterType="java.lang.Long">
		delete
		from song_list
		where song_id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.rina.domain.SongList">
		insert into song_list (song_id, song_name, song_artist,
		                       song_language, create_by, create_time,
		                       update_by, update_time)
		values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{artist,jdbcType=VARCHAR},
		        #{language,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		        #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<update id="updateOneSongBySongId" parameterType="com.rina.domain.SongList">
		update song_list
		set song_name     = #{name,jdbcType=VARCHAR},
		    song_artist   = #{artist,jdbcType=VARCHAR},
		    song_language = #{language,jdbcType=VARCHAR},
		    create_by     = #{createBy,jdbcType=VARCHAR},
		    create_time   = #{createTime,jdbcType=TIMESTAMP},
		    update_by     = #{updateBy,jdbcType=VARCHAR},
		    update_time   = #{updateTime,jdbcType=TIMESTAMP}
		where song_id = #{id,jdbcType=BIGINT}
	</update>
	<select id="getOneSongBySongId" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select song_id,
		       song_name,
		       song_artist,
		       song_language,
		       create_by,
		       create_time,
		       update_by,
		       update_time
		from song_list
		where song_id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select song_id,
		       song_name,
		       song_artist,
		       song_language,
		       create_by,
		       create_time,
		       update_by,
		       update_time
		from song_list
	</select>

	<select id="selectByNameOrArtist" resultMap="BaseResultMap">
		SELECT song_id, song_name, song_artist, song_language, create_by, create_time, update_by, update_time
		FROM song_list
		<where>
			<if test="nameOrArtist != null and nameOrArtist != '' and nameOrArtist != 'undefined'">
				song_name LIKE "%"#{nameOrArtist,jdbcType=VARCHAR}"%"
			</if>
			<if test="nameOrArtist != null and nameOrArtist != '' and nameOrArtist != 'undefined'">
				OR song_artist LIKE "%"#{nameOrArtist,jdbcType=VARCHAR}"%"
			</if>
			<if test="nameOrArtist != null and nameOrArtist != '' and nameOrArtist != 'undefined'">
				OR song_language LIKE "%"#{nameOrArtist,jdbcType=VARCHAR}"%"
			</if>
		</where>
	</select>

	<select id="selectByIds" resultMap="BaseResultMap">
		SELECT song_id,
		       song_name,
		       song_artist,
		       song_language,
		       create_by,
		       create_time,
		       update_by,
		       update_time
		FROM song_list
		<where>
			<if test="ids != null and ids.length > 0">
				song_id IN
				<foreach collection="ids" item="id" open="(" separator="," close=")">
					#{id,jdbcType=BIGINT}
				</foreach>
			</if>
		</where>
	</select>

	<update id="updateEditorName">
		update song_list
		set create_by = #{newEditor,jdbcType=VARCHAR}
		where create_by = #{oldEditor,jdbcType=VARCHAR};
		update song_list
		set update_by = #{newEditor,jdbcType=VARCHAR}
		where update_by = #{oldEditor,jdbcType=VARCHAR};
	</update>

</mapper>
